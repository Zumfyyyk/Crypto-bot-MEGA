from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ContextTypes, CommandHandler, CallbackQueryHandler
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
logger = logging.getLogger(__name__)

# –î–∞–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–æ–≤ –¥–ª—è –¥–æ–Ω–∞—Ç–∞
WALLETS = {
    "BTC": "bc1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh",
    "ETH": "0x71C7656EC7ab88b098defB751B7401B5f6d8976F",
    "USDT (TRC-20)": "TGS1VpxqCUkbhT7PYHhXmptj1kLQE5Z2u9"
}

async def donate_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –¥–æ–Ω–∞—Ç–∞."""
    donate_menu = [
        [KeyboardButton("BTC"), KeyboardButton("ETH")],
        [KeyboardButton("USDT (TRC-20)"), KeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥")]
    ]
    reply_markup = ReplyKeyboardMarkup(donate_menu, resize_keyboard=True)
    
    await update.message.reply_text(
        "üí∞ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É –¥–ª—è –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è:",
        reply_markup=reply_markup
    )

async def show_wallet(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã."""
    query = update.callback_query
    await query.answer()
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É –∏–∑ callback_data
    crypto = query.data.replace("donate_", "")
    
    if crypto in WALLETS:
        wallet_address = WALLETS[crypto]
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
        keyboard = [
            [InlineKeyboardButton("üí∞ –î—Ä—É–≥–∞—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞", callback_data="donate")],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        message_text = (
            f"üí∞ *–ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞ {crypto}*\n\n"
            f"`{wallet_address}`\n\n"
            "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É! –≠—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞–º —Ä–∞–∑–≤–∏–≤–∞—Ç—å –±–æ—Ç–∞ –∏ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏."
        )
        
        await query.edit_message_text(message_text, reply_markup=reply_markup, parse_mode="Markdown")
    else:
        # –ï—Å–ª–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≤—ã–±–æ—Ä—É
        await donate_command(update, context)

def get_donate_handler():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ–Ω–∞—Ç–∞."""
    return CallbackQueryHandler(
        lambda update, context: (
            donate_command(update, context) 
            if update.callback_query.data == "donate" 
            else show_wallet(update, context)
        ),
        pattern="^donate|donate_"
    )
