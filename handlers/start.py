from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ContextTypes, CommandHandler, MessageHandler, filters
import logging
from handlers.analysis import analysis_command
from handlers.market import market_command
from handlers.sentiment import sentiment_command
from handlers.info import info_command
from handlers.support import support_command
from handlers.donate import donate_command

logger = logging.getLogger(__name__)

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start."""
    user = update.effective_user
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
    
    # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    main_menu = [
        [KeyboardButton("üìä –ê–Ω–∞–ª–∏–∑"), KeyboardButton("üíπ –†—ã–Ω–æ–∫")],
        [KeyboardButton("üîç –°–µ–Ω—Ç–∏–º–µ–Ω—Ç"), KeyboardButton("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")],
        [KeyboardButton("üõü –ü–æ–¥–¥–µ—Ä–∂–∫–∞"), KeyboardButton("üí∞ –î–æ–Ω–∞—Ç")],
        [KeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥")]
    ]
    reply_markup = ReplyKeyboardMarkup(main_menu, resize_keyboard=True)
    
    welcome_message = (
        f"üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}!!\n\n"
        "–Ø –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã–π –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä—ã–Ω–æ–∫ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω.\n\n"
        "–ß—Ç–æ —è —É–º–µ—é:\n"
        "‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç\n"
        "‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä—ã–Ω–∫–µ\n"
        "‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —Ä—ã–Ω–∫–∞\n"
        "‚Ä¢ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é:"
    )
    await update.message.reply_text(welcome_message, reply_markup=reply_markup)

async def handle_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    user_input = update.message.text
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –≤—ã–±—Ä–∞–ª: {user_input}")
    
    if user_input == "üìä –ê–Ω–∞–ª–∏–∑":
        await analysis_command(update, context)
    elif user_input == "üíπ –†—ã–Ω–æ–∫":
        await market_command(update, context)
    elif user_input == "üîç –°–µ–Ω—Ç–∏–º–µ–Ω—Ç":
        await sentiment_command(update, context)
    elif user_input == "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è":
        await info_command(update, context)
    elif user_input == "üõü –ü–æ–¥–¥–µ—Ä–∂–∫–∞":
        await support_command(update, context)
    elif user_input == "üí∞ –î–æ–Ω–∞—Ç":
        await donate_command(update, context)
    elif user_input == "‚óÄÔ∏è –ù–∞–∑–∞–¥":
        await start_command(update, context)
    else:
        await update.message.reply_text("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –∏–∑ –º–µ–Ω—é.")

def get_start_handler():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start –∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    return [
        CommandHandler("start", start_command),
        MessageHandler(filters.TEXT & ~filters.COMMAND, handle_main_menu)
    ]
